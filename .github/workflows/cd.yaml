name: Release to GitHub

on:
  push:
    tags:
      - v*.*.*

jobs:
  build-push-backend:
    name: Build and push backend docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with: 
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: gradle :apps:backend:jib --image=ghcr.io/thedatasnok/fullstack-demo-backend:latest

      - run: gradle :apps:backend:jib --image=ghcr.io/thedatasnok/fullstack-demo-backend:${{ github.ref_name }}


  build-push-frontend:
    name: Build and push frontend docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-qemu-action@v2
      
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with: 
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        with:
          context: apps/frontend
          push: true
          tags: |
            ghcr.io/thedatasnok/fullstack-demo-frontend:latest
            ghcr.io/thedatasnok/fullstack-demo-frontend:${{ github.ref_name }}


  deploy-stack-staging:
    name: Deploy stack to staging
    runs-on: ubuntu-latest
    needs: 
      - build-push-backend
      - build-push-frontend
    environment: staging
    steps:
      - uses: actions/checkout@v3
      
      - uses: ./.github/actions/deploy-stack
        with: 
          k8s-url: ${{ vars.K8S_API_URL }}
          k8s-secret: ${{ secrets.K8S_SECRET }}
          namespace: ${{ vars.NAMESPACE }}
          hostname: ${{ vars.HOSTNAME }}
          cluster-issuer: ${{ vars.CLUSTER_ISSUER }}
          app-version: ${{ github.ref_name }}
